@charset "UTF-8";

/* 김환욱 css*/

.item-checkbox label.saledate{margin-left:20px;}
.table-wrap .item-checkbox.saledate2{padding-top:5px;}
.table-wrap.trh th td {text-align:center;}
.salesTable tr.hide { display:none; }
.table-wrap.bold th {font-family:'nanumSB'; font-weight: 700; font-size: 20px;}
.imgLayout.bold span {font-family:'nanumSB'; font-weight: 700; font-size: 20px;}
.asset1  { height:340px; padding-top: 50px;}
.asset1:after  {content:''; display:block; clear:both;}
.asset1 .tab1 {width:32%; height:340px; float:left; border:1px solid #ddd; box-sizing: border-box; }
.asset1 .tab2 {width:32%; height:340px; float:left; margin-left:2%; border:1px solid #ddd; box-sizing: border-box; }
.asset1 .tab3 {width:32%; height:340px; float:left; margin-left:2%; border:1px solid #ddd; box-sizing: border-box; }
.asset1 .tab1-1 {height: 78px; border:1px solid #ddd; background-color: #80bfff;}
.asset1 .tab1-2 {height: 258px; border:1px solid #ddd; background-color: #b3d9ff;}
.asset1 .tab2-1 {height: 78px; border:1px solid #ddd; background-color: #66ffff;}
.asset1 .tab2-2 {height: 258px; border:1px solid #ddd; background-color: #b3ffff;}
.asset1 .tab3-1 {height: 78px; border:1px solid #ddd; background-color: #ffb366;}
.asset1 .tab3-2 {height: 258px; border:1px solid #ddd; background-color: #ffd9b3;}
.asset1 .tab1 .tab1-1 h2 {text-align:center;}
.asset1 .tab2 .tab2-1 h2 {text-align:center;}
.asset1 .tab3 .tab3-1 h2 {text-align:center;}
.asset1 .tab1 .tab1-2 .btn-type-blue1.medium{display: block; margin: 0 20px; margin-top: 200px;}
.asset1 .tab2 .tab2-2 .btn-type-blue1.medium{display: block; margin: 0 20px; margin-top: 200px; }
.asset1 .tab3 .tab3-2 .btn-type-blue1.medium{display: block; margin: 0 20px; margin-top: 200px; }
/* .asset2  { height:340px; border:1px solid #ddd; margin:20px 0; } */
.table-wrap .pie3dContainer {border: 1px solid #ddd;}
.table-wrap .chart2 {border:1px solid #ddd;}
/* 장한별 css */
.menu-wrap.depth-two .menu-area  { width: 100%; padding: 0;}
.menu-wrap.depth-two .menu-area li { top: 0px; padding-right: 0px; }
.menu-wrap.depth-two .menu-area li a { line-height: 72px; }

.table-wrap .table-hori tr td.noAcInfo { height: 48px; }
.table-wrap .table-hori tr td.acInfo { height: 48px; }

input[type=text].modiTarget { width: 50%; }
input[type=password].modiTarget { width: 50%; }

table[name=transactionList] td { font-size: 18px; font-weight: 400; }
table[name=transactionList] td.positive { color: #387cd1; }
table[name=transactionList] td.negative { color: red; }

.content .atm-container { width: 1100px; height: 800px; text-align: center; padding-top: 80px; font-family: 'Orbitron', sans-serif;}
.content .atm-container .atm { width: 1100px; height: 600px; background-color: black; border-radius: 50px; }
.content .atm-container .atm .atm-display { position: absolute; width: 700px; height: 400px; background-color: white; border-radius: 50px;
											margin-left: 20px; margin-top: 30px; }
											
.content .atm-container .atm .atm-display .display-table { margin-left: 30px; margin-top: 30px; }
.content .atm-container .atm .atm-display .display-table tr { }
.content .atm-container .atm .atm-display .display-table tr td { font-size: 32px; font-family: 'Orbitron', sans-serif; }
.content .atm-container .atm .atm-display .display-table tr td:first-child { width: 200px; border-right: 1px solid black; }
.content .atm-container .atm .atm-display .display-table tr td:last-child { width: 400px; text-align: left; padding-left: 20px; }											
.content .atm-container .atm .atm-display .display-table tr td input[type='text'] { background-color: white; border: 0px; font-size: 32px; font-family: 'Orbitron', sans-serif; }
.content .atm-container .atm .atm-display .display-table tr td input[type='password'] { background-color: white; border: 0px; font-size: 32px; font-family: 'Orbitron', sans-serif; }

.content .atm-container .atm .btn-container { position: absolute; margin-top: 20px; margin-left: 730px; width: 360px; height: 480px; }
.content .atm-container .atm .btn-container div[class^='btn-'] { float: left; width: 100px; height: 100px; background-color: white; border-radius: 10px; margin: 10px 10px 10px; }
.content .atm-container .atm .btn-container div[class^='btn-'] span { line-height: 100px; font-size: 48px; }
  
.cssload-container {
	display: none;
    align-items: center;
    justify-content: center;
    
    z-index: 999;
    width: 100%;
    height: 100%;
    text-align: center;
    position: fixed;
    top: 0px;
    background: rgba(0, 0, 0, 0.5);
}

.cssload-crazy-arrow {
	width: 50px;
	height: 50px;
	margin: 0 auto;
	border: 5px solid;
	border-top-left-radius: 50%;
	border-bottom-right-radius: 50%;
	border-bottom-left-radius: 50%;
	border-color: #1e88e5;
	animation: cssload-spin 400ms infinite linear;
		-o-animation: cssload-spin 400ms infinite linear;
		-ms-animation: cssload-spin 400ms infinite linear;
		-webkit-animation: cssload-spin 400ms infinite linear;
		-moz-animation: cssload-spin 400ms infinite linear;
}



@keyframes cssload-spin {
	100%{ transform: rotate(360deg); transform: rotate(360deg); }
}

@-o-keyframes cssload-spin {
	100%{ -o-transform: rotate(360deg); transform: rotate(360deg); }
}

@-ms-keyframes cssload-spin {
	100%{ -ms-transform: rotate(360deg); transform: rotate(360deg); }
}

@-webkit-keyframes cssload-spin {
	100%{ -webkit-transform: rotate(360deg); transform: rotate(360deg); }
}

@-moz-keyframes cssload-spin {
	100%{ -moz-transform: rotate(360deg); transform: rotate(360deg); }
}

/* 방민주 css */
.info-area .box-agree li.fdn {height: 50px;line-height: 50px}
.result-box .mj {font-family:'nanumSB';fornt-weight:400;}



/* 정종목 css */
.customer{padding-bottom: 50px;}
.customer:after{content:''; display:block; clear:both;}
.col-md-6 .btn-type-blue1 {display: inline-block; padding: 0 10px; height: 30px; line-height: 30px; font-size: 18px; border-radius: 3px;
	color: #fff;
    background-color: #387cd1;
    border: 1px solid #387cd1;}




/* 박준형 css */

/* input[type=text]로 css 변경하게되면 모든 페이지에서 input element에 적용되기 때문에 
	변경을 적용할 특정한 페이지의 element에 class명을 주고 input[type=text] 대신에 
	.className { cssProp : val }로 수정하여 사용하길 바람
 */
 
/* 기존에 존재한 값을 불러오는 박스들에 대한 CSS - function을 주기 위해 클래스를 다르게 먹인 결과*/
td input[class="ACBtext"]  { /* 텍스트박스 */
    border: none;
    width: 100%;
    box-sizing: border-box;
}

td div[name="sltCat"]{
	width: 100%;
}

td div select[class="slt"] {
	border: none;
}

.table-wrap .table-hori td { 
	height: 20px;
	padding : 0px;
	border-right: 1px solid #ddd;
}

.box-wrap .box-area.record {
	float: left;
	position: relative;
	width: 50%;
}

.box-wrap .box-area dl.record {
	height: 110px;
}

.box-wrap .box-area dl.record dt {
	font-size: 30px;
}

.box-wrap .box-area dl.record dd a {
	float: right;
	font-size: 15px;
}